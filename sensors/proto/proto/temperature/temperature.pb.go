// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: temperature.proto

package temperature

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SensorReading struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SensorId      string                 `protobuf:"bytes,1,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	Temperature   float64                `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Location      string                 `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorReading) Reset() {
	*x = SensorReading{}
	mi := &file_temperature_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorReading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorReading) ProtoMessage() {}

func (x *SensorReading) ProtoReflect() protoreflect.Message {
	mi := &file_temperature_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorReading.ProtoReflect.Descriptor instead.
func (*SensorReading) Descriptor() ([]byte, []int) {
	return file_temperature_proto_rawDescGZIP(), []int{0}
}

func (x *SensorReading) GetSensorId() string {
	if x != nil {
		return x.SensorId
	}
	return ""
}

func (x *SensorReading) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *SensorReading) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SensorReading) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

var File_temperature_proto protoreflect.FileDescriptor

const file_temperature_proto_rawDesc = "" +
	"\n" +
	"\x11temperature.proto\x12\vtemperature\"\x88\x01\n" +
	"\rSensorReading\x12\x1b\n" +
	"\tsensor_id\x18\x01 \x01(\tR\bsensorId\x12 \n" +
	"\vtemperature\x18\x02 \x01(\x01R\vtemperature\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12\x1a\n" +
	"\blocation\x18\x04 \x01(\tR\blocationB\x13Z\x11proto/temperatureb\x06proto3"

var (
	file_temperature_proto_rawDescOnce sync.Once
	file_temperature_proto_rawDescData []byte
)

func file_temperature_proto_rawDescGZIP() []byte {
	file_temperature_proto_rawDescOnce.Do(func() {
		file_temperature_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temperature_proto_rawDesc), len(file_temperature_proto_rawDesc)))
	})
	return file_temperature_proto_rawDescData
}

var file_temperature_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_temperature_proto_goTypes = []any{
	(*SensorReading)(nil), // 0: temperature.SensorReading
}
var file_temperature_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_temperature_proto_init() }
func file_temperature_proto_init() {
	if File_temperature_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temperature_proto_rawDesc), len(file_temperature_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temperature_proto_goTypes,
		DependencyIndexes: file_temperature_proto_depIdxs,
		MessageInfos:      file_temperature_proto_msgTypes,
	}.Build()
	File_temperature_proto = out.File
	file_temperature_proto_goTypes = nil
	file_temperature_proto_depIdxs = nil
}
